@page "/ViewPost"
<h3>ViewPost</h3>
@using global::Shared.Model
@using BlazorApp.Services
@inject IPostService PostService
<div>
    <button @onclick="LoadPosts">Load</button>
</div>

@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No Posts to display</p>
}
else
{
    const int postsPerRow = 4;
    var postList = new List<Post>();
    var postCount = posts.Count();
    
    @for(int i = 0; i<postCount; i++)
    {
        postList = posts.Skip(i * postsPerRow).Take(postsPerRow).ToList();
        <div class="row mt-3">
             @if (postCount > 0)
                {
                    @foreach(var post in postList)
                    {
                        <div class=" col-md-3 mb-2">
                            <a href="/PostDetails/@post.Id">
                                
                                <div class="card">
                                    <div class="card-body">
                                        <h5 class="card-title mb-3">
                                            @post.title
                                        </h5>
                                        <p class="card-text">
                                            @post.user.UserName
                                        </p>
                                    </div>
                                </div>
                            </a>
                            
                        </div>
                    }
            
                }
        </div>

    }

}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}
@code {
    private IEnumerable<Post>? posts;
    private string msg = "";

    private async Task LoadPosts()
    {
        try
        {
            posts = await PostService.GetPostAsync(null, null,  null,null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}